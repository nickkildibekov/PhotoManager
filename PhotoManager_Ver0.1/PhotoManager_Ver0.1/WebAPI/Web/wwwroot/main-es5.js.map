{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/footer/footer.component.html","/./src/app/header/header.component.html","/./src/app/posts/post-create/create-post.component.html","/./src/app/posts/post-detail/post-detail.component.html","/./src/app/posts/post-edit/post-edit.component.html","/./src/app/posts/post-list/post-list.component.html","/./src/app/posts/posts.component.html","/./src/app/users/user-delete/user-delete.component.html","/./src/app/users/user-detail/user-detail.component.html","/./src/app/users/user-login/user-login.component.html","/./src/app/users/user-registration/user-registration.component.html","/./src/app/users/users-list/users-list.component.html","/./src/app/users/users.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/auth/auth.guard.ts","/./src/app/footer/footer.component.ts","/./src/app/header/header.component.ts","/./src/app/posts/pipes/last-week-filter.pipe.ts","/./src/app/posts/pipes/most-rated-filter.pipe.ts","/./src/app/posts/pipes/my-uploads-filter.pipe.ts","/./src/app/posts/post-create/create-post.component.ts","/./src/app/posts/post-detail/post-detail.component.ts","/./src/app/posts/post-edit/post-edit.component.ts","/./src/app/posts/post-list/post-list.component.ts","/./src/app/posts/posts.component.ts","/./src/app/shared/services/post.service.ts","/./src/app/shared/services/user.service.ts","/./src/app/users/user-delete/user-delete.component.ts","/./src/app/users/user-detail/user-detail.component.ts","/./src/app/users/user-login/user-login.component.ts","/./src/app/users/user-registration/user-registration.component.ts","/./src/app/users/users-list/users-list.component.ts","/./src/app/users/users.component.ts","/./src/app/utils/utils.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<body>\\r\\n   <!-- Header -->\\r\\n   <app-header></app-header>\\r\\n \\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n\\r\\n  <!-- Footer -->\\r\\n   <app-footer></app-footer>\\r\\n  <!-- Footer -->\\r\\n</body>\"","module.exports = \"<section id=\\\"footer\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n          <div class=\\\"row\\\" style=\\\"justify-content: space-evenly;\\\">\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <a href=\\\"callto:+380982159299\\\"><i id=\\\"social-phn\\\" class=\\\"fa fa-phone-square fa-3x social\\\"></i></a>\\r\\n              <a href=\\\"skype:live:nikita_kildibekov?call\\\"><i id=\\\"social-skp\\\" class=\\\"fa fa-skype fa-3x social\\\"></i></a>\\r\\n              <a href=\\\"mailto:#\\\"><i id=\\\"social-em\\\" class=\\\"fa fa-envelope-square fa-3x social\\\"></i></a>\\r\\n            </div>\\r\\n            <div class=\\\"text-center author-name\\\">\\r\\n              Nikita Kildibekov\\r\\n            </div>\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <a href=\\\"https://www.facebook.com/\\\"><i id=\\\"social-fb\\\" class=\\\"fa fa-facebook-square fa-3x social\\\"></i></a>\\r\\n              <a href=\\\"https://twitter.com\\\"><i id=\\\"social-tw\\\" class=\\\"fa fa-twitter-square fa-3x social\\\"></i></a>\\r\\n              <a href=\\\"https://www.instagram.com/\\\"><i id=\\\"social-instagram\\\" class=\\\"fa fa-instagram fa-3x social\\\"></i></a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </section>\"","module.exports = \" <header>\\r\\n    <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <a class=\\\"navbar-brand\\\" (click)='defaultFilter()'>Photo Manager</a>\\r\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\"\\r\\n          aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n        <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\">\\r\\n          <ul class=\\\"navbar-nav flex-grow-1 just-ct-sp-between\\\">\\r\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"isActivated\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-warning font-larger\\\" (click)='onUploadsFilter()'>My Uploads</button>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-success font-larger\\\" (click)='topContribFilter()'>Top contributors</button>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info font-larger\\\" (click)='mostRatedFilter()'>Most Rated</button>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger font-larger\\\" (click)='lastWeekFilter()'>Last Week</button>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"isActivated\\\">\\r\\n              <button class=\\\"btn btn-primary font-larger\\\" routerLink=\\\"posts/create\\\">Create</button>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"isActivated\\\">\\r\\n             <span><b>{{firstName}}</b></span> <br> <span><b>{{lastName}}</b></span>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\"  *ngIf=\\\"isActivated\\\">\\r\\n              <button class=\\\"btn btn-secondary font-larger\\\" (click)='onLogout()'><i>Log Out</i></button>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"!isActivated\\\">\\r\\n              <button class=\\\"btn btn-secondary font-larger\\\" routerLink=\\\"users/login\\\"><i>Login</i></button>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"!isActivated\\\">\\r\\n              <button class=\\\"btn btn-secondary font-larger\\\" routerLink=\\\"users/registration\\\"><i>Register</i></button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </nav>\\r\\n  </header>\\r\\n\"","module.exports = \"<form #form = ngForm autocomplete=\\\"off\\\" (ngSubmit)=\\\"onSubmit(Title,Description,Image)\\\">\\r\\n        <div class=\\\"card border-primary mb-3\\\">\\r\\n                <div class=\\\"card-header bg-primary\\\">\\r\\n                    <h3 class=\\\"card-title\\\">Create Post</h3>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Title</label>\\r\\n                                <input required ngModel #Title name=\\\"Title\\\" id=\\\"Title\\\" class=\\\"form-control col-sm-7\\\"/>                        \\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <label class=\\\"col-sm-10 col-form-label\\\"> Image</label>\\r\\n                                    <div class=\\\"col-sm-10\\\">\\r\\n                                        <div class=\\\"custom-file\\\">\\r\\n                                            <img [src]=\\\"imageUrl\\\"  style=\\\"width:250px;height:200px\\\">\\r\\n                                            <input  type=\\\"file\\\"  #Image  accept=\\\"image/*\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-7\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Description</label>\\r\\n                                <textarea required  ngModel #Description name=\\\"Description\\\" id=\\\"Description\\\" class=\\\"form-control\\\" rows=\\\"12\\\" cols=\\\"80\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                        <div class=\\\"row just-ct-evenly\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"button\\\" value=\\\"Back to list\\\" class=\\\"btn btn-primary\\\" (click) = \\\"onBack()\\\"/>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"submit\\\" value=\\\"Create\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"Image.value=== ''|| !form.valid\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n            </div>\\r\\n\\r\\n</form>\"","module.exports = \"<h1>Details</h1>\\r\\n<div>\\r\\n    <div class=\\\"row details-top\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <span>Author: </span>\\r\\n            <span>{{post?.AuthorFullName}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <span>Posted: </span>\\r\\n            <span>{{post?.PostedDateTime | date }}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"container details-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <p><b>Title:</b><br>{{post?.Title}}</p>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <p><b>Description:</b><br>{{post?.Description}}</p>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <p><b>Rating:</b>{{post?.Rating}}<br>\\r\\n                    </p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <img class=\\\"img-fluid\\\" src=\\\"assets/{{post?.ImagePath}}\\\" alt=\\\"Post image\\\"\\r\\n                    asp-append-version=\\\"true\\\" />\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row just-ct-evenly\\\">\\r\\n    <input type=\\\"button\\\" value=\\\"Back\\\" class=\\\"btn btn-primary font-larger\\\" (click)=\\\"onBack()\\\" />\\r\\n    <input type=\\\"button\\\" value=\\\"Edit Post\\\" class=\\\"btn btn-warning font-larger\\\" (click)=\\\"onEdit(post.Id)\\\" />\\r\\n    <input type=\\\"button\\\" value=\\\"Delete Post\\\" class=\\\"btn btn-danger font-larger\\\" (click)=\\\"onDelete(post.Id)\\\" />\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit(Id,Title,Description,Image)\\\">\\r\\n        <input ngModel #Id name=\\\"Id\\\" id=\\\"Id\\\" value=\\\"{{post?.Id}}\\\" style=\\\"display: none\\\"/>\\r\\n        <div class=\\\"card border-primary mb-3\\\">\\r\\n                <div class=\\\"card-header bg-primary\\\">\\r\\n                    <h3 class=\\\"card-title\\\">Edit Post</h3>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Title</label>\\r\\n                                <input required  ngModel #Title name=\\\"Title\\\" id=\\\"Title\\\" value=\\\"{{post?.Title}}\\\" class=\\\"form-control col-sm-7\\\"/>                        \\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <label class=\\\"col-sm-10 col-form-label\\\"> Image</label>\\r\\n                                    <div class=\\\"col-sm-10\\\">\\r\\n                                        <div class=\\\"custom-file\\\">\\r\\n                                            <img src=\\\"assets/{{post?.ImagePath}}\\\"  style=\\\"width:250px;height:200px\\\">\\r\\n                                            <input  type=\\\"file\\\"  #Image  accept=\\\"image/*\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-7\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Description</label>\\r\\n                                <textarea required  ngModel  name=\\\"Description\\\" #Description id=\\\"Description\\\" class=\\\"form-control\\\" rows=\\\"12\\\" cols=\\\"80\\\">{{post?.Description}}</textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                        <div class=\\\"row just-ct-evenly\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"button\\\" value=\\\"Back to list\\\" class=\\\"btn btn-primary\\\" />\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"submit\\\" value=\\\"Save\\\" class=\\\"btn btn-primary\\\"/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n            </div>\\r\\n\\r\\n</form>\\r\\n\"","module.exports = \"<div class=\\\"row just-ct-sp-between\\\">\\r\\n    <div *ngIf=\\\"postList?.length == 0\\\">\\r\\n        <p class=\\\"font-italic text-center\\\">\\r\\n            No posts in database\\r\\n        </p>\\r\\n    </div>\\r\\n    <div *ngFor=\\\"let post of postList | myUploads: filterCurUserId |  mostRated: mostrtd | lastWeek: lwfilter | paginate: { itemsPerPage: 8, currentPage: p } \\\"\\r\\n        class=\\\"col-md-3 d-flex align-items-stretch\\\">\\r\\n        <div class=\\\"card card-main border-success\\\">\\r\\n            <div class=\\\"card-header just-ct-sp-between row\\\">\\r\\n                <div>{{post.AuthorFullName}}</div>\\r\\n                <div><small>{{post.PostedDateTime | date}}</small></div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body container\\\">\\r\\n                <h4 class=\\\"card-title\\\">{{post.Title}}</h4>\\r\\n                <img class=\\\"card-img-top\\\" src=\\\"assets/{{post.ImagePath}}\\\" alt=\\\"Post image\\\"\\r\\n                    (click)=\\\"postDetails(post.Id)\\\" />\\r\\n                <p class=\\\"card-text\\\">\\r\\n                    <small>\\r\\n                        {{post.Description | slice:0:60}}<span *ngIf=\\\"post.Description.length > 60\\\">...</span>\\r\\n                    </small>\\r\\n                </p>\\r\\n                <div class=\\\"row main-card-inside just-ct-sp-between\\\" *ngIf=\\\"curUserId !== post.ApplicationUserId\\\">\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <i class=\\\"fa fa-thumbs-up mr-2\\\"  (click)='like(post, post.Id, curUserId)'></i>\\r\\n                            <span *ngIf=\\\"likedPostId === post.Id\\\">{{curLikes}}</span>\\r\\n                            <span *ngIf=\\\"likedPostId !== post.Id\\\">{{post.Likes?.length}}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <i class=\\\"fa fa-thumbs-down mr-2\\\" (click)='disLike(post.Id)'></i>\\r\\n                            <span *ngIf=\\\"disLikedPostId === post.Id\\\">{{curDisLikes}}</span>\\r\\n                            <span *ngIf=\\\"disLikedPostId !== post.Id\\\">{{post.DisLikes?.length}}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\" style=\\\"justify-content: space-around;\\\">\\r\\n                        <span *ngIf=\\\"likedPostId !== post.Id && dislLikedPostId !== post.Id \\\">Rating:\\r\\n                            {{post?.Rating}}</span>\\r\\n                        <span *ngIf=\\\"likedPostId === post.Id || disLikedPostId === post.Id \\\">Rating:\\r\\n                            {{getRating()}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row main-card-inside just-ct-sp-between\\\" *ngIf=\\\"curUserId === post.ApplicationUserId\\\">\\r\\n                    <div class=\\\"col-8\\\"><span><i>YOUR POST</i></span></div>\\r\\n                    <div>\\r\\n                        <span *ngIf=\\\"likedPostId !== post.Id && dislLikedPostId !== post.Id \\\">Rating:\\r\\n                            {{post?.Rating}}</span>\\r\\n                        <span *ngIf=\\\"likedPostId === post.Id || disLikedPostId === post.Id \\\">Rating:\\r\\n                            {{getRating()}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"text-center\\\" *ngIf=\\\"postList?.length\\\">\\r\\n    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n</div>\\r\\n\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"<p>user-delete works!</p>\\r\\n\"","module.exports = \"<p>user-detail works!</p>\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <section>\\r\\n            <form #loginFormModel='ngForm' autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(Email,Password)\\\">\\r\\n                <h4 class=\\\"text-center\\\">Use a local account to log in.</h4>\\r\\n                <hr />\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>E-mail</label>\\r\\n                    <input #Email name=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"loginFormModel.Email\\\" class=\\\"form-control\\\"\\r\\n                        required />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Password</label>\\r\\n                    <input #Password type=\\\"password\\\" name=\\\"Password\\\" [(ngModel)]=\\\"loginFormModel.Password\\\"\\r\\n                        class=\\\"form-control\\\" required />\\r\\n                </div>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" [disabled]=\\\"loginFormModel.invalid\\\">Log In</button>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <p>\\r\\n                        <a [routerLink]=\\\"['/users/registration']\\\">\\r\\n                            Register as a new user\\r\\n                        </a>\\r\\n                    </p>\\r\\n                </div>\\r\\n            </form>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 col-md-offset-2\\\">\\r\\n        <section>\\r\\n            <h4 class=\\\"text-center\\\">Use another service to log in.</h4>\\r\\n            <hr />\\r\\n        </section>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<form [formGroup]=\\\"formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-8 text-center\\\">\\r\\n            <h4>Create an account.</h4>\\r\\n            <p><span style=\\\"color:red\\\">*</span><span><i>-required fileld</i></span></p>\\r\\n            <hr />\\r\\n            <div class=\\\"row justify-content-sm-between\\\">\\r\\n                <div class=\\\"col-md-5\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                        <label>Email</label>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"Email\\\" type=\\\"email\\\"\\r\\n                            placeholder=\\\"enter your e-mail\\\">\\r\\n                        <label class=\\\"text-danger\\\"\\r\\n                            *ngIf=\\\"formModel.get('Email').touched && formModel.get('Email').errors?.email\\\">Invalid\\r\\n                            email address.</label>\\r\\n                        <label class=\\\"text-danger\\\"\\r\\n                            *ngIf=\\\"formModel.get('Email').touched && formModel.get('Email').errors?.required\\\">This\\r\\n                            field is mandatory.</label>\\r\\n                    </div>\\r\\n                    <div formGroupName=\\\"Passwords\\\">\\r\\n                        <div class=\\\"form-group required\\\">\\r\\n                            <label>Password</label>\\r\\n                            <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\">\\r\\n                            <label class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"formModel.get('Passwords.Password').touched && formModel.get('Passwords.Password').errors?.required\\\">This\\r\\n                                field is mandatory.</label>\\r\\n                            <label class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"formModel.get('Passwords.Password').touched && formModel.get('Passwords.Password').errors?.minlength\\\">Minimum\\r\\n                                6 characters required.</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group required\\\">\\r\\n                            <label>Confirm Password</label>\\r\\n                            <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"ConfirmPassword\\\">\\r\\n                            <label class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"formModel.get('Passwords.ConfirmPassword').touched && formModel.get('Passwords.ConfirmPassword').errors?.required\\\">This\\r\\n                                field is mandatory.</label>\\r\\n                            <label class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"formModel.get('Passwords.ConfirmPassword').touched && formModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\\\">Confirm\\r\\n                                Password does not match.</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-5\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                        <label>First Name</label>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"FirstName\\\" placeholder=\\\"enter your first name\\\">\\r\\n                        <label class=\\\"text-danger\\\"\\r\\n                            *ngIf=\\\"formModel.get('FirstName').touched && formModel.get('FirstName').errors?.required\\\">This\\r\\n                            field is mandatory.</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                        <label>Last Name</label>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"LastName\\\" placeholder=\\\"enter your last name\\\">\\r\\n                        <label class=\\\"text-danger\\\"\\r\\n                            *ngIf=\\\"formModel.get('LastName').touched && formModel.get('LastName').errors?.required\\\">This\\r\\n                            field is mandatory.</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Phone</label>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"Phone\\\" placeholder=\\\"enter your phone\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <hr />\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" [disabled]=\\\"!formModel.valid\\\">Sign\\r\\n                Up</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"","module.exports = \"<p>users-list works!</p>\\r\\n\"","module.exports = \"<router-outlet></router-outlet>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { UserService } from 'src/app/shared/services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit, Output } from '@angular/core';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: [],\r\n  providers: [PostListComponent],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  isActivated: any;\r\n  filter?: string;\r\n  constructor(private router: Router, private postListComponent: PostListComponent,\r\n              private service: UserService, private authGuard: AuthGuard) { }\r\n  title = 'Photo Manager';\r\n  ngOnInit() {\r\n    this.filter = 'default';\r\n    this.router.navigate(['posts/list/', this.filter]);\r\n  }\r\n\r\n  onLogout() {\r\n    sessionStorage.removeItem('token');\r\n    location.reload();\r\n\r\n  }\r\n\r\n  onUploadsFilter() {\r\n    this.filter = 'myUploads';\r\n    this.router.navigate(['posts/list/', this.filter]);\r\n  }\r\n  topContribFilter() {\r\n    this.filter = 'topContrib';\r\n    this.router.navigate(['posts/list/', this.filter]);\r\n  }\r\n  lastWeekFilter() {\r\n    this.filter = 'lastWeek';\r\n    this.router.navigate(['posts/list/', this.filter]);\r\n  }\r\n  mostRatedFilter() {\r\n    this.filter = 'mostRated';\r\n    this.router.navigate(['posts/list/', this.filter]);\r\n  }\r\n  defaultFilter() {\r\n    this.filter = 'default';\r\n    this.router.navigate(['posts/list/', this.filter]);\r\n  }\r\n}\r\n\r\n\r\n","import { MyUploadsFilterPipe } from './posts/pipes/my-uploads-filter.pipe';\r\n\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { UserDeleteComponent } from './users/user-delete/user-delete.component';\r\nimport { UserDetailComponent } from './users/user-detail/user-detail.component';\r\nimport { UsersListComponent } from './users/users-list/users-list.component';\r\nimport { UserRegistrationComponent } from './users/user-registration/user-registration.component';\r\nimport { UsersComponent} from './users/users.component';\r\n\r\n\r\nimport { PostService } from 'src/app/shared/services/post.service';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { PostsComponent } from './posts/posts.component';\r\nimport { PostDetailComponent } from './posts/post-detail/post-detail.component';\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { PostEditComponent } from './posts/post-edit/post-edit.component';\r\n\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { CreatePostComponent } from './posts/post-create/create-post.component';\r\nimport { UserLoginComponent } from './users/user-login/user-login.component';\r\nimport { MostRatedFilterPipe } from './posts/pipes/most-rated-filter.pipe';\r\nimport { LastWeekFilterPipe } from './posts/pipes/last-week-filter.pipe';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: '/posts/list/:filter', pathMatch: 'full' },\r\n  { path: 'root', component: AppComponent},\r\n  {\r\n    path: 'posts', component: PostsComponent,\r\n    children: [\r\n      { path: 'list/:filter', component: PostListComponent, data: { title: 'List of Posts' } },\r\n      { path: 'create', component: CreatePostComponent, data: { title: 'Create Post' } },\r\n      { path: 'detail/:Id', component: PostDetailComponent, data: { title: 'Post Details' } },\r\n      { path: 'edit/:Id', component: PostEditComponent, data: { title: 'Edit Post' } },\r\n    ]\r\n  },\r\n  {\r\n    path: 'users', component: UsersComponent,\r\n    children: [\r\n      { path: 'list', component: UsersListComponent, data: { title: 'List of Users' } },\r\n      { path: 'registration', component: UserRegistrationComponent , data: { title: 'Registration' } },\r\n      { path: 'login', component: UserLoginComponent , data: { title: 'Login' } },\r\n      { path: 'detail/:Id', component: UserDetailComponent, data: { title: 'User Details' } },\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n\r\n    PostsComponent,\r\n    PostDetailComponent,\r\n    PostListComponent,\r\n    CreatePostComponent,\r\n    PostEditComponent,\r\n\r\n    MyUploadsFilterPipe,\r\n    LastWeekFilterPipe,\r\n    MostRatedFilterPipe,\r\n\r\n    UsersComponent,\r\n    UsersListComponent,\r\n    UserRegistrationComponent,\r\n    UserDeleteComponent,\r\n    UserDetailComponent,\r\n    UserLoginComponent,\r\n\r\n    HeaderComponent,\r\n    FooterComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    NgxPaginationModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n    RouterModule.forRoot(appRoutes),\r\n  ],\r\n  providers: [PostService, UserService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    filter: string;\r\n\r\n    constructor(private router: Router) { }\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        if (sessionStorage.getItem('token') != null) {\r\n            return true;\r\n        } else {\r\n            this.filter = 'default';\r\n            this.router.navigate(['posts/list/', this.filter]);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: []\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { AuthGuard } from 'src/app/auth/auth.guard';\r\nimport { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: [],\r\n  providers: [AppComponent]\r\n})\r\nexport class HeaderComponent implements OnInit, OnChanges {\r\n  isActivated: any;\r\n  firstName: string;\r\n  lastName: string;\r\n  constructor(private root: AppComponent, private authGuard: AuthGuard) { }\r\n\r\n  ngOnInit() {\r\n    this.isActivated = this.authGuard.canActivate(null, null);\r\n    if (this.isActivated) {\r\n      this.firstName = sessionStorage.getItem('curUserFName');\r\n      this.lastName = sessionStorage.getItem('curUserLName');\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.firstName = changes.firstName.currentValue;\r\n    this.lastName = changes.lastName.currentValue;\r\n\r\n  }\r\n\r\n  onLogout() {\r\n    this.root.onLogout();\r\n  }\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'lastWeek'\r\n})\r\n\r\nexport class LastWeekFilterPipe implements PipeTransform {\r\n    transform(postList: any, lwfilter: Date): any[] {\r\n        if (!postList) { return []; }\r\n        if (!lwfilter) { return postList; }\r\n        lwfilter = new Date();\r\n        lwfilter.setDate( lwfilter.getDate() - 7 );\r\n        return postList.filter(post => post.PostedDateTime  >= lwfilter.getDate());\r\n    }\r\n}\r\n\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'mostRated'\r\n})\r\nexport class MostRatedFilterPipe implements PipeTransform {\r\n    transform(postList: any, mostrtd: number): any[] {\r\n        if (!postList) { return []; }\r\n        if (!mostrtd) { return postList; }\r\n        return postList.filter(post => post.Rating  > 0).sort((one, two) => (one.Rating > two.Rating ? -1 : 1));\r\n    }\r\n}\r\n\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'myUploads'\r\n})\r\nexport class MyUploadsFilterPipe implements PipeTransform {\r\n    transform(postList: any, filterCurUserId: string): any[] {\r\n        if (!postList) { return []; }\r\n        if (!filterCurUserId) { return postList; }\r\n        return postList.filter(post => post.ApplicationUserId === filterCurUserId);\r\n    }\r\n}\r\n\r\n","import { Post } from 'src/app/shared/models/post.model';\r\nimport { PostService } from 'src/app/shared/services/post.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm, FormBuilder } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-post',\r\n  templateUrl: './create-post.component.html',\r\n  styles: []\r\n})\r\nexport class CreatePostComponent implements OnInit {\r\n  post: Post;\r\n  formData: Post;\r\n  fileToUpload: File = null;\r\n  filter: string;\r\n  imageUrl = 'assets/default.png';\r\n  constructor(public postService: PostService, private location: Location, private router: Router) { }\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n  handleFileInput(file: FileList) {\r\n    this.fileToUpload = file.item(0);\r\n    // Show image preview\r\n    const reader = new FileReader();\r\n    reader.onload = (event: any) => {\r\n      this.imageUrl = event.target.result;\r\n    };\r\n    reader.readAsDataURL(this.fileToUpload);\r\n  }\r\n  resetForm(form?: NgForm) {\r\n    if (form != null) {\r\n      form.resetForm();\r\n    }\r\n    this.formData = {\r\n      Id: null,\r\n      Title: '',\r\n      Description: '',\r\n      PostedDateTime: null,\r\n      Likes: [],\r\n      DisLikes: [],\r\n      Rating: 0,\r\n      AuthorFullName: '',\r\n      ApplicationUserId: '',\r\n      ImagePath: 'assets/default.png',\r\n      Image: null\r\n    };\r\n  }\r\n  onSubmit(Title, Description, Image) {\r\n    this.postService.addPost(Title.value, Description.value, this.fileToUpload).subscribe(data => {\r\n      console.log('done');\r\n      this.imageUrl = '';\r\n      this.resetForm();\r\n      this.filter = 'default';\r\n      this.router.navigate(['posts/list/', this.filter]);\r\n    });\r\n  }\r\n\r\n  onBack() {\r\n    this.location.back();\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PostService } from 'src/app/shared/services/post.service';\r\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {Location} from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-post-detail',\r\n  templateUrl: './post-detail.component.html',\r\n  styles: []\r\n})\r\nexport class PostDetailComponent implements OnInit {\r\n  Id: number;\r\n  post: any;\r\n  filter: string;\r\n  constructor(private actrouter: ActivatedRoute, private toastr: ToastrService,\r\n              public postService: PostService, private location: Location, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.actrouter.paramMap.subscribe(params => {\r\n      console.log(params.get('Id'));\r\n      this.postService.getPostById(+params.get('Id')).subscribe(c => {\r\n        console.log(c);\r\n        this.post = c;\r\n      });\r\n    });\r\n  }\r\n\r\n  onBack() {\r\n    this.location.back();\r\n  }\r\n  onEdit(Id: number) {\r\n    this.router.navigate(['posts/edit/', Id]);\r\n   }\r\n  onDelete(Id: number) {\r\n    if (confirm('Are you sure to delete this record ?') === true) {\r\n      this.postService.deletePost(Id)\r\n      .subscribe(x => {\r\n        this.filter = 'default';\r\n        this.router.navigate(['posts/list/', this.filter]);\r\n        this.toastr.warning('Deleted Successfully', 'Post Info');\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Post } from 'src/app/shared/models/post.model';\r\nimport { PostService } from 'src/app/shared/services/post.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-post-edit',\r\n  templateUrl: './post-edit.component.html',\r\n  styles: []\r\n})\r\n\r\nexport class PostEditComponent implements OnInit {\r\n  post: any;\r\n  fileToUpload: File = null;\r\n  filter: string;\r\n  constructor(private actrouter: ActivatedRoute, public postService: PostService, private router: Router) { }\r\n  ngOnInit() {\r\n    this.actrouter.paramMap.subscribe(params => {\r\n      console.log(params.get('Id'));\r\n      this.postService.getPostById(+params.get('Id')).subscribe(c => {\r\n        console.log(c);\r\n        this.post = c;\r\n      });\r\n    });\r\n  }\r\n  handleFileInput(file: FileList) {\r\n    this.fileToUpload = file.item(0);\r\n    // Show image preview\r\n    const reader = new FileReader();\r\n    reader.onload = (event: any) => {\r\n      this.post.ImagePath = event.target.result;\r\n    };\r\n    reader.readAsDataURL(this.fileToUpload);\r\n  }\r\n  onSubmit(Id, Title, Description) {\r\n    this.postService.updatePost(Id.value, Title.value, Description.value, this.fileToUpload).subscribe(data => {\r\n      this.filter = 'default';\r\n      this.router.navigate(['posts/list/', this.filter]);\r\n    });\r\n  }\r\n}\r\n","import { Like } from './../../shared/models/like.model';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport { PostService } from 'src/app/shared/services/post.service';\r\nimport { Post } from 'src/app/shared/models/post.model';\r\nimport { Router, Routes, ActivatedRoute } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/auth/auth.guard';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { CurrentUserService } from 'src/app/utils/utils';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  providers: [],\r\n  selector: 'app-post-list',\r\n  templateUrl: './post-list.component.html',\r\n  styles: []\r\n})\r\nexport class PostListComponent implements OnInit {\r\n  isActivated: any;\r\n  userDetails: any;\r\n  postList: Post[];\r\n  likedPostId: number;\r\n  disLikedPostId: number;\r\n  curLikes: number;\r\n  curDisLikes: number;\r\n  filteredPostList: any;\r\n  filterCurUserId: string;\r\n  curUserId: string;\r\n  token: string;\r\n  lwfilter: Date;\r\n  mostrtd: number;\r\n  p = 1;\r\n  filter: string;\r\n  cpost: any;\r\n  curPost: Post;\r\n\r\n  constructor(private authGuard: AuthGuard, private userService: UserService,\r\n              private postService: PostService, private router: Router,\r\n              private currentUserService: CurrentUserService, private actrouter: ActivatedRoute,\r\n              private toastr: ToastrService) { }\r\n  ngOnInit() {\r\n    this.isActivated = this.authGuard.canActivate(null, null);\r\n    this.likedPostId = null;\r\n    this.token = sessionStorage.getItem('token');\r\n    this.disLikedPostId = null;\r\n    this.curUserId = this.currentUserService.getCurrentUserId(this.token);\r\n    this.actrouter.paramMap.subscribe(params => {\r\n      switch (params.get('filter')) {\r\n        case 'myUploads':\r\n          this.lwfilter = null;\r\n          this.mostrtd = 0;\r\n          this.filterCurUserId = this.currentUserService.getCurrentUserId(this.token);\r\n          break;\r\n        case 'topContrib':\r\n          this.lwfilter = null;\r\n          this.filterCurUserId = null;\r\n          break;\r\n        case 'mostRated':\r\n          this.lwfilter = null;\r\n          this.filterCurUserId = null;\r\n          this.mostrtd = 1;\r\n          break;\r\n        case 'lastWeek':\r\n          this.filterCurUserId = null;\r\n          this.mostrtd = 0;\r\n          this.lwfilter = new Date();\r\n          this.lwfilter.setDate(this.lwfilter.getDate() - 7);\r\n          break;\r\n        case 'default':\r\n          this.filterCurUserId = null;\r\n          this.curUserId = this.currentUserService.getCurrentUserId(this.token);\r\n          this.mostrtd = 0;\r\n          this.lwfilter = null;\r\n          this.postService.getPosts().subscribe(\r\n            resultArray => {\r\n              console.log(resultArray);\r\n              return this.postList = resultArray;\r\n            },\r\n            error => console.log('Error :: ' + error)\r\n          );\r\n      }\r\n    });\r\n    this.cpost = {\r\n      Id: null,\r\n      Title: '',\r\n      Description: '',\r\n      PostedDateTime: null,\r\n      Rating: 0,\r\n      Likes: [],\r\n      DisLikes: [],\r\n      AuthorFullName: '',\r\n      ApplicationUserId: '',\r\n      ImagePath: 'assets/default.jpg',\r\n      Image: null\r\n    };\r\n  }\r\n\r\n  postDetails(id: number) {\r\n    this.router.navigate(['posts/detail/', id]);\r\n  }\r\n\r\n  like(post: Post, postId: number, curUserId: string) {\r\n    if (this.token !== null) {\r\n      if (!this.isContain(post, curUserId)) {\r\n        this.likedPostId = postId;\r\n        this.postService.likePost(this.token, postId).subscribe(x => {\r\n          this.cpost = x;\r\n          this.curDisLikes = +this.cpost.DisLikes.length;\r\n          this.curLikes = +this.cpost.Likes.length;\r\n        });\r\n      } else {\r\n        this.toastr.error('You can vote only one time.', 'Voting failed.');\r\n      }\r\n    } else {\r\n      this.toastr.error('Only registered users can vote.', 'Voting failed.');\r\n    }\r\n  }\r\n\r\n  disLike(post: Post, postId: number, curUserId: string) {\r\n    if (this.token !== null) {\r\n      if (!this.isContain(post, curUserId)) {\r\n        this.disLikedPostId = postId;\r\n        this.postService.disLikePost(this.token, postId).subscribe(x => {\r\n          this.cpost = x;\r\n          this.curDisLikes = +this.cpost.DisLikes.length;\r\n          this.curLikes = +this.cpost.Likes.length;\r\n        });\r\n      } else {\r\n        this.toastr.error('You can vote only one time.', 'Voting failed.');\r\n      }\r\n    } else {\r\n      this.toastr.error('Only registered users can vote.', 'Voting failed.');\r\n    }\r\n  }\r\n  getUserId() {\r\n    this.currentUserService.getCurrentUserId(this.token);\r\n  }\r\n\r\n  isContain(post: Post, curUserId: string) {\r\n    return post.Likes.some(l => l.ApplicationUserId === curUserId);\r\n  }\r\n\r\n  getRating() {\r\n    return this.curLikes - this.curDisLikes;\r\n  }\r\n}\r\n","import { PostService } from 'src/app/shared/services/post.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-posts',\r\n  templateUrl: './posts.component.html',\r\n  styles: []\r\n})\r\nexport class PostsComponent implements OnInit {\r\n\r\n  constructor(private postService: PostService ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Post } from '../models/post.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { CurrentUserService } from 'src/app/utils/utils';\r\nimport { User } from '../models/user.model';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostService {\r\n  apiUrl = 'https://localhost:44327/api/Posts/';\r\n  result: any;\r\n  curUser: any;\r\n  token: string;\r\n  constructor(private fb: FormBuilder, private http: HttpClient, public currentUserService: CurrentUserService) { }\r\n\r\n  private handleError<T>({ operation = 'operation', result }: { operation?: string; result?: T; } = {}) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      return of(result as T);\r\n    };\r\n  }\r\n  getPosts(): Observable<Post[]> {\r\n    return this.http.get<Post[]>(this.apiUrl)\r\n      .pipe(\r\n        tap(list => console.log('fetched Posts')),\r\n        catchError(this.handleError({ operation: 'getPosts', result: [] }))\r\n      );\r\n  }\r\n\r\n  getPostById(id: number) {\r\n    const url = `${this.apiUrl}${id}`;\r\n    return this.http.get(url).pipe(\r\n      tap(_ => console.log(`fetched Post id=${id}`)),\r\n      catchError(this.handleError<Post>({ operation: `getPostById id=${id}` }))\r\n    );\r\n  }\r\n\r\n  addPost(title: string, description: string, fileToUpload: File) {\r\n    this.token = sessionStorage.getItem('token');\r\n    const formData: FormData = new FormData();\r\n    formData.append('Title', title);\r\n    formData.append('Description', description);\r\n    formData.append('File', fileToUpload);\r\n    formData.append('ApplicationUserId', this.currentUserService.getCurrentUserId(this.token));\r\n    formData.append('AuthorFullName', (this.currentUserService.getCurrentUserFName() + ' '\r\n      + this.currentUserService.getCurrentUserLName()));\r\n    return this.http.post(this.apiUrl, formData);\r\n  }\r\n\r\n  updatePost(id: string, title: string, description: string, fileToUpload: File) {\r\n    const formData: FormData = new FormData();\r\n    formData.append('Title', title);\r\n    formData.append('Description', description);\r\n    if (fileToUpload != null) {\r\n      formData.append('File', fileToUpload);\r\n\r\n    }\r\n    formData.append('Id', id);\r\n\r\n    return this.http.put(this.apiUrl, formData);\r\n  }\r\n\r\n  deletePost(id: number): Observable<Post> {\r\n    const url = `${this.apiUrl}${id}`;\r\n    return this.http.delete<Post>(url, httpOptions).pipe(\r\n      tap(_ => console.log(`deleted Post id=${id}`)),\r\n      catchError(this.handleError<Post>({ operation: 'deletePost' }))\r\n    );\r\n  }\r\n\r\n  likePost(token: string, postId: any) {\r\n    const url = `${this.apiUrl}Like/${token}/${postId}`;\r\n    const result = this.http.post(url, httpOptions);\r\n    return result;\r\n  }\r\n\r\n  disLikePost(token: string, postId: number) {\r\n    const url = `${this.apiUrl}DisLike/${token}/${postId}`;\r\n    const result = this.http.post(url, httpOptions);\r\n    return result;\r\n  }\r\n\r\n  checkForLike(userId: string, postId: number) {\r\n    const url = `${this.apiUrl}CheckForLike/${userId}/${postId}`;\r\n    const result = this.http.post(url, httpOptions);\r\n    return result;\r\n  }\r\n\r\n  checkForDisLike(userId: string, postId: number) {\r\n    const url = `${this.apiUrl}CheckForDisLike/${userId}/${postId}`;\r\n    const result = this.http.post(url, httpOptions);\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\r\n  readonly BaseURI = 'https://localhost:44327/api/';\r\n  curUserId: string;\r\n\r\n  formModel = this.fb.group({\r\n    Email: ['', Validators.email],\r\n    FirstName: ['', Validators.required],\r\n    LastName: ['', Validators.required],\r\n    Phone: ['', Validators.required],\r\n    Passwords: this.fb.group({\r\n      Password: ['', [Validators.required, Validators.minLength(6)]],\r\n      ConfirmPassword: ['', Validators.required]\r\n    }, { validator: this.comparePasswords })\r\n  });\r\n\r\n  loginFormModel = this.fb.group({\r\n    Email: ['', Validators.email],\r\n    Password: ['', [Validators.required, Validators.minLength(6)]]\r\n  });\r\n\r\n  comparePasswords(fb: FormGroup) {\r\n    const confirmPswrdCtrl = fb.get('ConfirmPassword');\r\n\r\n    if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\r\n      if (fb.get('Password').value !== confirmPswrdCtrl.value) {\r\n        confirmPswrdCtrl.setErrors({ passwordMismatch: true });\r\n      } else {\r\n        confirmPswrdCtrl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  register(formModel) {\r\n    const body = {\r\n      Email: formModel.value.Email,\r\n      FirstName: formModel.value.FirstName,\r\n      LastName: formModel.value.LastName,\r\n      Phone: formModel.value.Phone,\r\n      Password: formModel.value.Passwords.Password\r\n    };\r\n    return this.http.post(this.BaseURI + 'applicationUsers/Register', body);\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    const formData: FormData = new FormData();\r\n    formData.append('Email', email);\r\n    formData.append('Password', password);\r\n    return this.http.post(this.BaseURI + 'applicationUsers/Login', formData);\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-delete',\r\n  templateUrl: './user-delete.component.html',\r\n  styles: []})\r\nexport class UserDeleteComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styles: []})\r\nexport class UserDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AppComponent } from 'src/app/app.component';\r\n\r\n@Component({\r\n    providers: [AppComponent],\r\n    selector: 'app-user-login',\r\n    templateUrl: './user-login.component.html',\r\n    styles: []\r\n})\r\nexport class UserLoginComponent implements OnInit {\r\n\r\n    loginFormModel = {\r\n        Email: '',\r\n        Password: ''\r\n    };\r\n    constructor(private route: ActivatedRoute, public userService: UserService,\r\n                private router: Router, private toastr: ToastrService, private root: AppComponent) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onSubmit(Email, Password) {\r\n        this.userService.login(Email.value, Password.value).subscribe(\r\n            (res: any) => {\r\n                sessionStorage.setItem('token', res.token);\r\n                sessionStorage.setItem('curUserFName', res.userFName);\r\n                sessionStorage.setItem('curUserLName', res.userLName);\r\n                this.root.ngOnInit();\r\n                location.reload();\r\n            },\r\n            err => {\r\n                if (err.status === 400) {\r\n                    this.toastr.error('Incorrect email or password.', 'Authentication failed.');\r\n                } else {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n","import { UserLoginComponent } from './../user-login/user-login.component';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  providers: [ UserLoginComponent ],\r\n  selector: 'app-user-registration',\r\n  templateUrl: './user-registration.component.html',\r\n  styles: []\r\n})\r\nexport class UserRegistrationComponent implements OnInit {\r\n  constructor(private fb: FormBuilder, private login: UserLoginComponent,\r\n              public userService: UserService, private router: Router, private toastr: ToastrService) { }\r\n\r\n  user: any = {};\r\n  filter: string;\r\n  formModel = this.fb.group({\r\n    Email: ['', Validators.email],\r\n    FirstName: ['', Validators.required],\r\n    LastName: ['', Validators.required],\r\n    Phone: ['', Validators.required],\r\n    Passwords: this.fb.group({\r\n      Password: ['', [Validators.required, Validators.minLength(6)]],\r\n      ConfirmPassword: ['', Validators.required]\r\n    }, { validator: this.comparePasswords })\r\n  });\r\n\r\n  comparePasswords(fb: FormGroup) {\r\n    const confirmPswrdCtrl = fb.get('ConfirmPassword');\r\n    if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\r\n      if (fb.get('Password').value !== confirmPswrdCtrl.value) {\r\n        confirmPswrdCtrl.setErrors({ passwordMismatch: true });\r\n      } else {\r\n        confirmPswrdCtrl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.formModel.reset();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.userService.register(this.formModel).subscribe(\r\n      (res: any) => {\r\n        if (res.Succeeded) {\r\n          this.userService.login(this.formModel.value.Email, this.formModel.value.Passwords.Password).subscribe(\r\n            (log: any) => {\r\n                sessionStorage.setItem('token', log.token);\r\n                sessionStorage.setItem('curUserFName', log.userFName);\r\n                sessionStorage.setItem('curUserLName', log.userLName);\r\n                this.router.navigateByUrl('/root').then(c => location.reload()).then(\r\n                    r => this.toastr.success('New user created!', 'Registration successful.'));\r\n            });\r\n          this.formModel.reset();\r\n        } else {\r\n          res.Errors.forEach(element => {\r\n            switch (element.Code) {\r\n              case 'DuplicateUserName':\r\n                this.toastr.error('Username is already taken', 'Registration failed.');\r\n                break;\r\n              default:\r\n                this.toastr.error(element.description, 'Registration failed.');\r\n                break;\r\n            }\r\n          });\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styles: []})\r\nexport class UsersListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { UserService } from 'src/app/shared/services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styles: []\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as jwt_decode from 'jwt-decode';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CurrentUserService {\r\n    decoded: any;\r\n    user: any;\r\n    getCurrentUserId(token: string) {\r\n            if (token !== null) {\r\n                this.decoded = jwt_decode(token);\r\n                const userId =  this.decoded.UserID;\r\n                return userId;\r\n            }\r\n            return null;\r\n    }\r\n    getCurrentUserFName() {\r\n        if (sessionStorage.getItem('token') != null) {\r\n            return this.user = sessionStorage.getItem('curUserFName');\r\n        }\r\n    }\r\n    getCurrentUserLName() {\r\n        if (sessionStorage.getItem('token') != null) {\r\n            return this.user = sessionStorage.getItem('curUserLName');\r\n        }\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}